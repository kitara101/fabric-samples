#
# Copyright IBM Corp All Rights Reserved
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

networks:
  basic:

services:
  ca.brand1.com:
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.brand1.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.brand1.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/${CA_BRAND1_PRIVATE_KEY}
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/brand1.com/ca/:/etc/hyperledger/fabric-ca-server-config
      - ./resource/brand1-fabric-ca-server-config.yaml:/etc/hyperledger/fabric-ca-server/fabric-ca-server-config.yaml:ro
    container_name: ca.brand1.com
    networks:
      - basic

  ca.brand2.com:
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.brand2.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.brand2.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/${CA_BRAND2_PRIVATE_KEY}
    ports:
      - "7055:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d '
    volumes:
      - ./crypto-config/peerOrganizations/brand2.com/ca/:/etc/hyperledger/fabric-ca-server-config
      - ./resource/brand2-fabric-ca-server-config.yaml:/etc/hyperledger/fabric-ca-server/fabric-ca-server-config.yaml:ro
    container_name: ca.brand2.com
    networks:
      - basic

  ca.tracelabel.com:
    image: hyperledger/fabric-ca
    container_name: ca.tracelabel.com
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
#      - FABRIC_CA_SERVER_CA_NAME=ca.tracelabel.com
#      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.tracelabel.com-cert.pem
#      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/${CA_TRACELABEL_PRIVATE_KEY}
    ports:
      - "7057:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d --cafiles ca/ca1/fabric-ca-config.yaml --cafiles ca/ca2/fabric-ca-config.yaml'
    # sh -c 'fabric-ca-server start -b admin:adminpw -d --cafiles ca/ca1/fabric-ca-config.yaml --cafiles ca/ca2/fabric-ca-config.yaml'
    volumes:
          - ./resource/tracelabel-default-fabric-ca-server-config.yaml:/etc/hyperledger/fabric-ca-server/fabric-ca-server-config.yaml:ro
          # CA tracelabel.com
          - ./crypto-config/ordererOrganizations/tracelabel.com/ca/ca.tracelabel.com-cert.pem:/etc/hyperledger/fabric-ca-server/ca/ca1/ca-cert.pem:ro
          - ./crypto-config/ordererOrganizations/tracelabel.com/ca/ca-key.pem:/etc/hyperledger/fabric-ca-server/ca/ca1/ca-key.pem:ro
          - ./resource/tracelabel-fabric-ca-server-config.yaml:/etc/hyperledger/fabric-ca-server/ca/ca1/fabric-ca-config.yaml:ro
          # CA distr.tracelabel.com
          - ./crypto-config/peerOrganizations/distr.tracelabel.com/ca/ca.distr.tracelabel.com-cert.pem:/etc/hyperledger/fabric-ca-server/ca/ca2/ca-cert.pem:ro
          - ./crypto-config/peerOrganizations/distr.tracelabel.com/ca/ca-key.pem:/etc/hyperledger/fabric-ca-server/ca/ca2/ca-key.pem:ro
          - ./resource/distr-fabric-ca-server-config.yaml:/etc/hyperledger/fabric-ca-server/ca/ca2/fabric-ca-config.yaml:ro
          # CA admin.distr.tracelabel.com
        #  - ./crypto-config/peerOrganizations/admin.distr.tracelabel.com/ca:/etc/hyperledger/fabric-ca-server/ca/ca3/
        #  - ./resource/distr-admin-fabric-ca-server-config.yaml:/etc/hyperledger/fabric-ca-server/ca/ca3/fabric-ca-config.yaml:ro
          # - ./crypto-config/peerOrganizations/distr.tracelabel.com/ca/:/etc/hyperledger/fabric-ca-server/ca/ca2:ro
          # - ./resource/tracelabel-distr-fabric-ca-server-config.yaml:/etc/hyperledger/fabric-ca-server/ca/ca2/fabric-ca-config.yaml:ro
  #    - ./crypto-config/peerOrganizations/distributor1.com/ca/ca.distributor1.com-cert.pem:/etc/hyperledger/fabric-ca-server/ca/ca1/ca-cert.pem:ro
  #    - ./crypto-config/peerOrganizations/distributor1.com/ca/${CA_ORG4_PRIVATE_KEY}:/etc/hyperledger/fabric-ca-server/ca/ca1/msp/keystore/${CA_ORG4_PRIVATE_KEY}:ro
  #    - ./resource/Distributor2-fabric-ca-server-config.yaml:/etc/hyperledger/fabric-ca-server/ca/ca2/fabric-ca-config.yaml:ro
  #    - ./crypto-config/peerOrganizations/distributor2.example.com/ca/ca.distributor2.example.com-cert.pem:/etc/hyperledger/fabric-ca-server/ca/ca2/ca-cert.pem:ro
  #    - ./crypto-config/peerOrganizations/distributor2.example.com/ca/${CA_ORG5_PRIVATE_KEY}:/etc/hyperledger/fabric-ca-server/ca/ca2/msp/keystore/${CA_ORG5_PRIVATE_KEY}:ro
    networks:
      - basic

  ca.distr.tracelabel.com:
    image: hyperledger/fabric-ca
    container_name: ca.distr.tracelabel.com
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
    ports:
      - "7058:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d '
    # sh -c 'fabric-ca-server start -b admin:adminpw -d --cafiles ca/ca1/fabric-ca-config.yaml --cafiles ca/ca2/fabric-ca-config.yaml'
    volumes:
          - ./resource/tracelabel-default-fabric-ca-server-config.yaml:/etc/hyperledger/fabric-ca-server/fabric-ca-server-config.yaml:ro
          # CA admin.distr.tracelabel.com
          - ./crypto-config/peerOrganizations/admin.distr.tracelabel.com/ca:/etc/hyperledger/fabric-ca-server/ca/ca1/
          - ./resource/distr-admin-fabric-ca-server-config.yaml:/etc/hyperledger/fabric-ca-server/ca/ca1/fabric-ca-config.yaml:ro
          # CA distr1.distr.tracelabel.com
          - ./crypto-config/peerOrganizations/distributors1.com/ca:/etc/hyperledger/fabric-ca-server/ca/ca2/
          - ./resource/distr-distr1-fabric-ca-server-config.yaml:/etc/hyperledger/fabric-ca-server/ca/ca2/fabric-ca-config.yaml:ro
    networks:
      - basic
    depends_on:
      - ca.tracelabel.com


  ca.cli:
    image: hyperledger/fabric-ca
    container_name: ca.cli
    tty: true
    command: bash
    working_dir: /etc/hyperledger/client
    environment:
      - FABRIC_CA_CLIENT_HOME=/etc/hyperledger/client
    # sh -c 'fabric-ca-server start -b admin:adminpw -d --cafiles ca/ca1/fabric-ca-config.yaml --cafiles ca/ca2/fabric-ca-config.yaml'
    volumes:
      - ${CA_CLI_PATH}:/etc/hyperledger/client
      - ./crypto-config/peerOrganizations/distributor1.com/msp:/etc/hyperledger/client/distr1
      - ./crypto-config/peerOrganizations/distr.tracelabel.com/msp:/etc/hyperledger/client/distributors
      - ./crypto-config/ordererOrganizations/tracelabel.com/msp:/etc/hyperledger/client/tracelabel
      - ./resource/fabric-ca-client-config.yaml:/etc/hyperledger/client/fabric-ca-client-config.yaml
#      - ./crypto-config/peerOrganizations/tracelabel.com/peers/peer0.tracelabel.com/msp:/etc/hyperledger/client/peer0.tracelabel.com
#      - ./resource/register.peer.tracelabel.sh:/etc/hyperledger/client/register.peer.tracelabel.sh
    depends_on:
      - ca.tracelabel.com
    networks:
      - basic


  orderer.tracelabel.com:
    container_name: orderer.tracelabel.com
    image: hyperledger/fabric-orderer
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=TraceLabelMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    volumes:
        - ./config/:/etc/hyperledger/configtx
        - ./crypto-config/ordererOrganizations/tracelabel.com/orderers/orderer.tracelabel.com/:/etc/hyperledger/msp/orderer
    networks:
      - basic

  peer0.brand1.com:
    container_name: peer0.brand1.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.brand1.com
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=Brand1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.brand1.com:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=brand1.couchdb:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/brand1.com/peers/peer0.brand1.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/brand1.com/users:/etc/hyperledger/msp/users
        - ./config:/etc/hyperledger/configtx
    depends_on:
      - orderer.tracelabel.com
      - brand1.couchdb
    networks:
      - basic

  peer0.brand2.com:
    container_name: peer0.brand2.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.brand2.com
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=Brand2MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.brand2.com:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=brand2.couchdb:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7061:7051
      - 7063:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/brand2.com/peers/peer0.brand2.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/brand2.com/users:/etc/hyperledger/msp/users
        - ./config:/etc/hyperledger/configtx
    depends_on:
      - orderer.tracelabel.com
      - brand2.couchdb
    networks:
      - basic

  # peer0.tracelabel.com:
  #   container_name: peer0.tracelabel.com
  #   image: hyperledger/fabric-peer
  #   environment:
  #     - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
  #     - CORE_PEER_ID=peer0.tracelabel.com
  #     - CORE_LOGGING_PEER=debug
  #     - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
  #     - CORE_PEER_LOCALMSPID=TraceLabelMSP
  #     - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
  #     - CORE_PEER_ADDRESS=peer0.tracelabel.com:7051
  #     # # the following setting starts chaincode containers on the same
  #     # # bridge network as the peers
  #     # # https://docs.docker.com/compose/networking/
  #     - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic
  #     - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
  #     - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=tracelabel.couchdb:5984
  #     # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
  #     # provide the credentials for ledger to connect to CouchDB.  The username and password must
  #     # match the username and password set for the associated CouchDB.
  #     - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
  #     - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
  #   working_dir: /opt/gopath/src/github.com/hyperledger/fabric
  #   command: peer node start
  #   # command: peer node start --peer-chaincodedev=true
  #   ports:
  #     - 7071:7051
  #     - 7073:7053
  #   volumes:
  #       - /var/run/:/host/var/run/
  #       - ./crypto-config/peerOrganizations/tracelabel.com/peers/peer0.tracelabel.com/msp:/etc/hyperledger/msp/peer:ro
  #       - ./crypto-config/peerOrganizations/tracelabel.com/users:/etc/hyperledger/msp/users:ro
  #       - ./config:/etc/hyperledger/configtx
  #   depends_on:
  #     - orderer.tracelabel.com
  #     - tracelabel.couchdb
  #   networks:
  #     - basic

  peer0.distr.tracelabel.com:
    container_name: peer0.distr.tracelabel.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.distr.tracelabel.com
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=DistributorslMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.tracelabel.com:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=tracelabel.couchdb:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7071:7051
      - 7073:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/distr.tracelabel.com/peers/peer0.distr.tracelabel.com/msp:/etc/hyperledger/msp/peer:ro
        - ./crypto-config/peerOrganizations/distr.tracelabel.com/users:/etc/hyperledger/msp/users:ro
        - ./config:/etc/hyperledger/configtx
    depends_on:
      - orderer.tracelabel.com
      - tracelabel.couchdb
    networks:
      - basic

  brand1.couchdb:
    container_name: brand1.couchdb
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 5984:5984
    networks:
      - basic

  brand2.couchdb:
    container_name: brand2.couchdb
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 6984:5984
    networks:
      - basic

  tracelabel.couchdb:
    container_name: tracelabel.couchdb
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 7984:5984
    networks:
      - basic

  cli:
    container_name: cli
    image: hyperledger/fabric-tools
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.brand1.com:7051
      - CORE_PEER_LOCALMSPID=Brand1MSP
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/brand1.com/users/Admin@brand1.com/msp
      - CORE_CHAINCODE_KEEPALIVE=10
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ./../chaincode/:/opt/gopath/src/github.com/
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
    networks:
        - basic
    #depends_on:
    #  - orderer.example.com
    #  - peer0.brand1.com
    #  - couchdb
